// @mixin generateSpacingHelpers($breakpoint: "xs", $spacingTypes: (margin, padding), $spacingIncrements: 10, $spacingSides: (top, right, bottom, left)) {
//   @each $spacingType in $spacingTypes {
//     $spacingTypeShort: str-slice($spacingType, 1, 1);
//
// 		.#{$spacingTypeShort}-a-#{$breakpoint}-0 {
// 		  #{$spacingType}: 0 !important;
// 		}
//
// 		@each $side in $spacingSides {
// 		  $sideShort: str-slice($side, 1, 1);
//
// 		  .#{$spacingTypeShort}-#{$sideShort}-#{$breakpoint}-0 {
// 		    #{$spacingType}-#{$side}: 0 !important;
// 		  }
// 		}
//
// 		.#{$spacingTypeShort}-a-#{$breakpoint}-1 {
// 		  #{$spacingType}: 1rem !important;
// 		}
//
// 		@each $side in $spacingSides {
// 		  $sideShort: str-slice($side, 1, 1);
//
// 		  .#{$spacingTypeShort}-#{$sideShort}-#{$breakpoint}-1 {
// 		    #{$spacingType}-#{$side}: 1rem !important;
// 		  }
// 		}
//
//     @for $i from 2 through $spacingIncrements {
//       .#{$spacingTypeShort}-a-#{$breakpoint}-#{$i} {
//         #{$spacingType}: ($i - 1)*1.5rem !important;
//       }
//
//       @each $side in $spacingSides {
//         $sideShort: str-slice($side, 1, 1);
//
//         .#{$spacingTypeShort}-#{$sideShort}-#{$breakpoint}-#{$i} {
//           #{$spacingType}-#{$side}: ($i - 1)*1.5rem !important;
//         }
//       }
//     }
//   }
// }

@mixin generateSpacingHelpers($breakpoint: "xs") {
  @each $prop, $abbrev in (margin: m, padding: p) {
    @each $size, $lengths in $spacers {
      $length-x:   map-get($lengths, x);
      $length-y:   map-get($lengths, y);

      .#{$abbrev}-a-#{$breakpoint}-#{$size} { #{$prop}:        $length-y $length-x !important; } // a = All sides
      .#{$abbrev}-t-#{$breakpoint}-#{$size} { #{$prop}-top:    $length-y !important; }
      .#{$abbrev}-r-#{$breakpoint}-#{$size} { #{$prop}-right:  $length-x !important; }
      .#{$abbrev}-b-#{$breakpoint}-#{$size} { #{$prop}-bottom: $length-y !important; }
      .#{$abbrev}-l-#{$breakpoint}-#{$size} { #{$prop}-left:   $length-x !important; }

      // Axes
      .#{$abbrev}-x-#{$breakpoint}-#{$size} {
        #{$prop}-right:  $length-x !important;
        #{$prop}-left:   $length-x !important;
      }
      .#{$abbrev}-y-#{$breakpoint}-#{$size} {
        #{$prop}-top:    $length-y !important;
        #{$prop}-bottom: $length-y !important;
      }
    }
  }
}

@include media-breakpoint-down(lg) {
  @include generateSpacingHelpers("lg");
}

@include media-breakpoint-down(md) {
  @include generateSpacingHelpers("md");
}

@include media-breakpoint-down(sm) {
  @include generateSpacingHelpers("sm");
}

@include media-breakpoint-down(xs) {
  @include generateSpacingHelpers("xs");
}
